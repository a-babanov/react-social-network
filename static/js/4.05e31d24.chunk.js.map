{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirectComponent.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthredirectComponent","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","s","dialog","activeClassName","active","id","name","Message","message","Dialogs","dialogs","dialogsItems","map","d","messages","m","AddNewMessageReduxForm","onSubmit","values","addMessage","newMessage","maxLength50","maxFieldLength","reduxForm","form","handleSubmit","Field","component","TextArea","validate","required","placeholder","compose","dialogsPage"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,oJCG3KC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAA4B,SAACC,GAAe,IAC/CC,EAD8C,4JAEhD,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QADhB,cAAC,IAAD,CAAUC,GAAG,eAJoB,GACpBC,IAAML,WAOlCD,EAA4BO,YAAQX,EAARW,CAAoCL,GAEpE,OAAOF,I,6FCRIQ,EARI,SAACJ,GAChB,OACI,qBAAKK,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASC,gBAAiBF,IAAEG,OAAQR,GAAI,YAAcD,EAAMU,GAA5D,SAAiEV,EAAMW,UCCpEC,EANC,SAACZ,GACb,OACI,8BAAMA,EAAMa,W,kCC6BLC,EAzBC,SAACd,GAKb,OACI,sBAAKK,UAAWC,IAAES,QAAlB,UACI,qBAAKV,UAAWC,IAAEU,aAAlB,SACI,8BAEQhB,EAAMP,MAAMsB,QAAQE,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYP,KAAMO,EAAEP,KAAMD,GAAIQ,EAAER,YAIzE,sBAAKL,UAAWC,IAAEa,SAAlB,UACI,8BAEQnB,EAAMP,MAAM0B,SAASF,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAASP,QAASO,EAAEP,eAG1D,cAACQ,EAAD,CAAwBC,SAnBjB,SAACC,GAChBvB,EAAMwB,WAAWD,EAAOE,sBAwB5BC,EAAcC,YAAe,IAc3BN,EAAyBO,YAAU,CAAEC,KAAM,qBAAlBD,EAbL,SAAC5B,GACvB,OACI,uBAAMsB,SAAUtB,EAAM8B,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUT,GACrBf,KAAK,aAAayB,YAAY,uBAClC,8BACI,0D,yBChCDC,sBACXzC,IACAO,aANkB,SAACV,GAAD,MAAY,CAC9BA,MAAOA,EAAM6C,eAKY,CAAEd,iBAFhBa,CAGbvB","file":"static/js/4.05e31d24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__vycd5\",\"dialogsItems\":\"Dialogs_dialogsItems__1sV2O\",\"dialog\":\"Dialogs_dialog__2d9ij\",\"active\":\"Dialogs_active__1clEy\",\"messages\":\"Dialogs_messages__3GU9F\"};","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthredirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let withAuthredirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return withAuthredirectComponent;\r\n}","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.active} to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxFieldLength, required } from '../Utils/validators/validators';\r\nimport { TextArea } from '../Common/FormsControls/FormsControls';\r\n\r\nconst Dialogs = (props) => {\r\n    const addMessage = (values) => {\r\n        props.addMessage(values.newMessage);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <div>\r\n                    {\r\n                        props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {\r\n                        props.state.messages.map(m => <Message message={m.message} />)\r\n                    }\r\n                </div>\r\n                <AddNewMessageReduxForm onSubmit={addMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs\r\nlet maxLength50 = maxFieldLength(50);\r\nconst AddNewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea}\r\n                validate={[required, maxLength50]}\r\n                name=\"newMessage\" placeholder=\"Enter your message\" />\r\n            <div>\r\n                <button>Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewMessageReduxForm = reduxForm({ form: \"AddNewMessageForm\" })(AddNewMessageForm)","import { addMessage } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthredirectComponent } from \"../../hoc/withAuthRedirectComponent\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    state: state.dialogsPage\r\n})\r\n\r\nexport default compose(\r\n    withAuthredirectComponent,\r\n    connect(mapStateToProps, { addMessage })\r\n)(Dialogs)"],"sourceRoot":""}